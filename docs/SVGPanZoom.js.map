{"version":3,"file":"SVGPanZoom.js","sources":["../node_modules/extend/index.js","../src/Animation.js","../src/SVGPanZoom.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","//Polyfill for AnimationFrame\nlet requestAnimationFrame = window.requestAnimationFrame;\nlet cancelAnimationFrame = window.cancelAnimationFrame;\nif (!requestAnimationFrame || !cancelAnimationFrame) {\n    requestAnimationFrame = function(callback, element) {\n        const currTime = new Date().getTime();\n        const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        const id = window.setTimeout(function() {\n            callback(currTime + timeToCall);\n        }, timeToCall);\n\n        lastTime = currTime + timeToCall;\n        return id;\n    };\n    cancelAnimationFrame = function(id) {\n        clearTimeout(id);\n    };\n}\n\nclass Animation {\n    constructor(initialState, finalState, time, onChange, onComplete) {\n        let start = 0;\n        let now = 0;\n\n        this.getCurrentState = () => {\n            const currentState = {};\n            Object.keys(initialState).forEach(key => {\n                currentState[key] = initialState[key] + (now / time) * (finalState[key] - initialState[key]);\n            });\n            return currentState;\n        };\n\n        this.animate = timestamp => {\n            if (!start) {\n                start = timestamp;\n            }\n\n            now = timestamp - start;\n            if (now <= time) {\n                onChange(this.getCurrentState());\n                this.id = requestAnimationFrame(this.animate);\n            } else {\n                onComplete();\n            }\n        };\n\n        this.id = requestAnimationFrame(this.animate.bind(this));\n    }\n}\n\n/**\n * Returns an animate method which executes given callback at intervals\n * animate method accepts (initialState, finalState, time)\n * callback has currentState as parameter\n * @param {Function} callback\n *   Executed at each step of animation\n */\nexport default callback => {\n    let currentAnimation;\n    return (initialState, finalState, time, onComplete) => {\n        currentAnimation && cancelAnimationFrame(currentAnimation.id);\n        currentAnimation = new Animation(initialState, finalState, time, callback || Function.prototype, (...args) => {\n            currentAnimation = null;\n            (onComplete || Function.prototype).apply(null, args);\n        });\n    };\n};\n","import extend from 'extend';\nimport getAnimator from './Animation';\n\nconst defaultOptions = {\n    initialViewBox: null,\n    animationTime: 200,\n    limits: null,\n    eventMagnet: null,\n    zoom: {\n        factor: 0.25,\n        minZoom: 1,\n        maxZoom: 3,\n        events: {\n            mouseWheel: true,\n            doubleClick: true,\n            pinch: true\n        },\n        callback: function(multiplier) { }\n    },\n    pan: {\n        factor: 100,\n        events: {\n            drag: true,\n            dragMouseButton: 1,\n            dragCursor: \"move\"\n        },\n        callback: function(coordinates) { }\n    }\n};\n\nconst defaultViewBox = {\n    x: 0,\n    y: 0,\n    width: 1000,\n    height: 1000\n};\n\n/**\n * Parse the viewbox string as defined in the spec for the svg tag.\n *\n * @param {String} viewBoxString\n *   A valid value of the `viewBox` attribute.\n *\n * @return {Object} viewBox\n *   A viewbox object. Contains numbers, in the format `{x, y, width, height}`.\n */\nconst parseViewBoxString = string => {\n    const viewBox = string.replace(/\\s+/g, \" \").split(\" \");\n    return {\n        x: parseFloat(viewBox[0]),\n        y: parseFloat(viewBox[1]),\n        width: parseFloat(viewBox[2]),\n        height: parseFloat(viewBox[3])\n    };\n};\n\n/**\n * Transform the point from page co-ordinate system to SVG co-ordinate system\n *\n * @param {SVGElement} svgRoot\n *   The `<svg>` DOM object\n *\n * @param {Object} point\n *   Coordinates of the point. Contains numbers, in the format `{x, y}`.\n *\n * @return {Object}\n *   Coordinates of the point in SVG co-ordinate system. Contains numbers, in the format `{x, y}`.\n */\nconst coordinateTransform = function(svgRoot, point) {\n    const pos = svgRoot.createSVGPoint();\n    pos.x = parseInt(point.x, 10);\n    pos.y = parseInt(point.y, 10);\n    return pos.matrixTransform(svgRoot.getScreenCTM().inverse());\n};\n\n/**\n * Get the mouse or first touch position from the `event`, relative to the SVG viewBox.\n *\n * @param {SVGElement} svgRoot\n *   The `<svg>` DOM object\n *\n * @param {MouseEvent|TouchEvent|jQueryEvent} event\n *   The DOM or jQuery event.\n *\n * @return {Object}\n *   Coordinates of the event. Contains numbers, in the format `{x, y}`.\n */\nconst getViewBoxCoordinatesFromEvent = function(svgRoot, e) {\n    //If modified event get original event\n    e = e.originalEvent || e;\n\n    if (/touch/i.test(e.type)) {\n        //Event has touch information\n        if (e.touches !== null && e.touches.length) {\n            e = e.touches[0];\n        }\n        //If touchend get the required info from changedTouches\n        else if (e.changedTouches !== null && e.changedTouches.length) {\n            e = e.changedTouches[0];\n        }\n    }\n\n    const position = { x: e.clientX, y: e.clientY };\n    return coordinateTransform(svgRoot, position);\n};\n\n/**\n * Create and set viewBox attribute of given SVG element\n *\n * @param {SVGElement} svg\n *   The `<svg>` DOM object\n *\n * @param {Object} viewBox\n *   A viewbox object. Contains numbers, in the format `{x, y, width, height}`.\n */\nconst setViewBox = function(svg, viewBox) {\n    svg.setAttribute(\"viewBox\", [viewBox.x, viewBox.y, viewBox.width, viewBox.height].join(' '));\n};\n\n/**\n * Get distance between fingers for two finger touch event\n *\n * @param {TouchEvent|jQueryEvent} event\n *   The DOM or jQuery event.\n */\nconst touchDistance = function(event) {\n    const touches = (event.originalEvent || event).touches;\n    return Math.sqrt(Math.pow(touches[0].clientX - touches[1].clientX, 2) + Math.pow(touches[0].clientY - touches[1].clientY, 2));\n};\n\n/**\n * Check if the event is a two finger touch event\n *\n * @param {TouchEvent|jQueryEvent} event\n *   The DOM or jQuery event.\n */\nconst isDoubleTouch = function(event) {\n    const touches = (event.originalEvent || event).touches;\n    return touches.length === 2;\n};\n\n/**\n * Get mid point of fingers for two finger touch event in SVG co-ordinate system\n *\n * @param {SVGElement} svg\n *   The `<svg>` DOM object\n *\n * @param {TouchEvent|jQueryEvent} event\n *   The DOM or jQuery event.\n */\nconst touchCenter = function(svg, event) {\n    const touches = (event.originalEvent || event).touches;\n    return coordinateTransform(svg, {\n        x: (touches[0].clientX + touches[1].clientX) / 2,\n        y: (touches[0].clientY + touches[1].clientY) / 2\n    });\n};\n\nclass SVGPanZoom {\n    constructor(svg, options) {\n        if (!(svg instanceof SVGElement)) {\n            throw new Error('Invalid Parameters. Firt parameter to SVGPanZoom should be an svg element');\n        }\n\n        this.svg = svg;\n        svg.setAttribute(\"preserveAspectRatio\", \"xMidYMid meet\");\n\n        let viewBox = extend({}, svg.viewBox.baseVal);\n        if (viewBox.x === 0 && viewBox.y === 0 && viewBox.width === 0 && viewBox.height === 0) {\n            viewBox = defaultViewBox;\n        }\n\n        // Option validations\n        options: {\n            let _options;\n            Object.defineProperty(this, 'options', {\n                get: function() {\n                    return _options;\n                },\n                set: function(options) {\n                    if (_options) {\n                        throw new Error('Options cannot be overriden');\n                    }\n                    _options = options;\n                }\n            });\n        }\n\n        setOptions: {\n            const self = this;\n            let _initialViewBox, _animationTime, _eventMagnet, _limits;\n\n            this.options = {\n                get initialViewBox() {\n                    return _initialViewBox;\n                },\n                set initialViewBox(initialViewBox) {\n                    // Set initial viewbox\n                    if (initialViewBox !== null) {\n                        if (typeof initialViewBox === \"string\") {\n                            viewBox = parseViewBoxString(initialViewBox);\n                        } else if (typeof initialViewBox === \"object\") {\n                            viewBox = extend({}, defaultViewBox, initialViewBox);\n                        } else {\n                            throw new Error('initialViewBox is of invalid type');\n                        }\n                    }\n\n                    _initialViewBox = extend({}, viewBox);\n                },\n                get animationTime() {\n                    return _animationTime;\n                },\n                set animationTime(animationTime) {\n                    _animationTime = animationTime || 0;\n                },\n                get eventMagnet() {\n                    return _eventMagnet;\n                },\n                set eventMagnet(eventMagnet) {\n                    self.destroy();\n                    _eventMagnet = eventMagnet || svg;\n                    self._setupEvents();\n                },\n                get limits() {\n                    return _limits;\n                },\n                set limits(limits) {\n                    _limits = {};\n                    const directionalLimits = ((limits ? limits : (limits === 0 ? 0 : 15)) + '').trim().split(' ');\n\n                    horizontal: {\n                        const multiplier = Number((directionalLimits[1] || directionalLimits[0]).replace(/%/g, '')) / 100;\n                        const horizontalSizeIncrement = viewBox.height * multiplier;\n                        _limits.minX = viewBox.x - horizontalSizeIncrement;\n                        _limits.maxX = viewBox.x + viewBox.width + horizontalSizeIncrement;\n                    }\n\n                    vertical: {\n                        const multiplier = Number(directionalLimits[0].replace(/%/g, '')) / 100;\n                        const verticalSizeIncrement = viewBox.width * multiplier;\n                        _limits.minY = viewBox.y - verticalSizeIncrement;\n                        _limits.maxY = viewBox.y + viewBox.height + verticalSizeIncrement;\n                    }\n                }\n            };\n        }\n\n        // Animate method\n        const animate = getAnimator(state => setViewBox(svg, state));\n\n        // Getter for ViewBox\n        this.getViewBox = () => extend({}, viewBox);\n\n        // Setter for ViewBox\n        this.setViewBox = (x, y, width, height, animationTime, callback) => {\n            if (typeof animationTime === 'function') {\n                callback = animationTime;;\n                animationTime = null;\n            }\n\n            if (!animationTime && animationTime !== 0) {\n                animationTime = this.options.animationTime;\n            }\n\n            const oldBox = this.getViewBox();\n\n            viewBox = {\n                x: (!!x || x === 0) ? x : viewBox.x,\n                y: (!!y || y === 0) ? y : viewBox.y,\n                width: (!!width || width === 0) ? width : viewBox.width,\n                height: (!!height || height === 0) ? height : viewBox.height\n            };\n\n            this.validateLimits(viewBox);\n\n            if (animationTime > 0) {\n                animate(oldBox, viewBox, animationTime, callback);\n            } else {\n                setViewBox(svg, viewBox);\n                (callback || Function.prototype)();\n            }\n\n            // Chaining\n            return this;\n        };\n\n        // Pan methods\n        pan: {\n            function panMethod(callback, amount, animationTime) {\n                if (!this.options.pan) {\n                    return this;\n                }\n\n                if (!amount && amount !== 0) {\n                    amount = this.options.pan.factor\n                    if (!amount) {\n                        return this;\n                    }\n                }\n\n                return callback(amount, animationTime);\n            }\n\n            this.panLeft = panMethod.bind(this, (amount, animationTime) => (\n                this.pan(viewBox.x - amount, null, animationTime)\n            ));\n\n            this.panRight = panMethod.bind(this, (amount, animationTime) => (\n                this.pan(viewBox.x + amount, null, animationTime)\n            ));\n\n            this.panUp = panMethod.bind(this, (amount, animationTime) => (\n                this.pan(null, viewBox.y - amount, animationTime)\n            ));\n\n            this.panDown = panMethod.bind(this, (amount, animationTime) => (\n                this.pan(null, viewBox.y + amount, animationTime)\n            ));\n\n            this.pan = (x, y, animationTime) => (\n                this.setViewBox(x, y, null, null, animationTime, () => {\n                    this.options.pan.callback(this.getViewBox());\n                })\n            );\n        }\n\n        // Zoom methods\n        zoom: {\n            function zoomMethod(callback, focalPoint, amount, animationTime) {\n                if (!this.options.zoom) {\n                    return this;\n                }\n\n                if (!amount && amount !== 0) {\n                    amount = this.options.zoom.factor\n                    if (!amount) {\n                        return this;\n                    }\n                }\n\n                return callback(focalPoint, amount, animationTime);\n            };\n\n            this.zoomIn = zoomMethod.bind(this, (focalPoint, amount, animationTime) => (\n                this.zoomOut(focalPoint, -amount, animationTime)\n            ));\n\n            this.zoomOut = zoomMethod.bind(this, (focalPoint, amount, animationTime) => {\n                let newHeight, newWidth;\n                if (amount < 0) {\n                    newWidth = viewBox.width / (1 - amount);\n                    newHeight = viewBox.height / (1 - amount);\n                } else {\n                    newWidth = viewBox.width * (1 + amount);\n                    newHeight = viewBox.height * (1 + amount);\n                }\n\n                //Validate zoom limits\n                const minWidthAfterZoom = this.options.initialViewBox.width / this.options.zoom.maxZoom;\n                const maxWidthAfterZoom = this.options.initialViewBox.width / this.options.zoom.minZoom;\n                if (newWidth < minWidthAfterZoom) {\n                    newHeight *= minWidthAfterZoom / newWidth;\n                    newWidth = minWidthAfterZoom;\n                } else if (newWidth > maxWidthAfterZoom) {\n                    newHeight *= maxWidthAfterZoom / newWidth;\n                    newWidth = maxWidthAfterZoom;\n                }\n\n                const minHeightAfterZoom = this.options.initialViewBox.height / this.options.zoom.maxZoom;\n                const maxHeightAfterZoom = this.options.initialViewBox.height / this.options.zoom.minZoom;\n                if (newHeight < minHeightAfterZoom) {\n                    newWidth *= minHeightAfterZoom / newHeight;\n                    newHeight = minHeightAfterZoom;\n                } else if (newHeight > maxHeightAfterZoom) {\n                    newWidth *= maxHeightAfterZoom / newHeight;\n                    newHeight = maxHeightAfterZoom;\n                }\n\n                // Calculate origin based on the focal point constant\n                let origin;\n                if (!focalPoint) {\n                    origin = {\n                        x: viewBox.x + (viewBox.width - newWidth) / 2,\n                        y: viewBox.y + (viewBox.height - newHeight) / 2\n                    };\n                } else {\n                    origin = {\n                        x: focalPoint.x + (newWidth / viewBox.width) * (viewBox.x - focalPoint.x),\n                        y: focalPoint.y + (newHeight / viewBox.height) * (viewBox.y - focalPoint.y),\n                    };\n                }\n\n                return this.setViewBox(origin.x, origin.y, newWidth, newHeight, animationTime, () => {\n                    this.options.zoom.callback(this.options.initialViewBox.width / newWidth, this.getViewBox());\n                });\n            });\n        }\n\n        this.destroy = Function.prototype;\n\n        // Fill in default options\n        extend(this.options, extend(true, {}, defaultOptions, options));\n\n        // Set initial viewbox\n        this.reset(0);\n    }\n\n    validateLimits(viewBox) {\n        const limits = this.options.limits;\n        const limitsWidth = Math.abs(limits.maxX - limits.minX);\n        const limitsHeight = Math.abs(limits.maxY - limits.minY);\n        if (viewBox.width > limitsWidth) {\n            viewBox.height *= limitsWidth / viewBox.width;\n            viewBox.width = limitsWidth;\n        }\n        if (viewBox.height > limitsHeight) {\n            viewBox.width *= limitsHeight / viewBox.height;\n            viewBox.height = limitsHeight;\n        }\n        if (viewBox.x < limits.minX) viewBox.x = limits.minX;\n        if (viewBox.y < limits.minY) viewBox.y = limits.minY;\n        if (viewBox.x + viewBox.width > limits.maxX) viewBox.x = limits.maxX - viewBox.width;\n        if (viewBox.y + viewBox.height > limits.maxY) viewBox.y = limits.maxY - viewBox.height;\n    }\n\n    reset(animationTime, callback) {\n        return this.clone(this.options.initialViewBox, animationTime, callback);\n    }\n\n    clone(viewBox, animationTime, callback) {\n        return this.setViewBox(viewBox.x, viewBox.y, viewBox.width, viewBox.height, animationTime, callback);\n    }\n\n    getCenter() {\n        const viewBox = this.getViewBox();\n        return {\n            x: viewBox.x + viewBox.width / 2,\n            y: viewBox.y + viewBox.height / 2\n        };\n    }\n\n    setCenter(x, y, animationTime, callback) {\n        return this.setViewBox(x - viewBox.width / 2, y - viewBox.height / 2, viewBox.width, viewBox.height, animationTime, callback);\n    }\n\n    _setupEvents() {\n        const svg = this.svg;\n        const handlers = {\n            mousewheel: function(event) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                const delta = parseInt((event || event.originalEvent).wheelDelta);\n\n                if (!delta || !this.options.zoom || !this.options.zoom.events.mouseWheel) {\n                    return;\n                }\n\n                const mouse = getViewBoxCoordinatesFromEvent(svg, event);\n                if (delta > 0) {\n                    this.zoomIn(mouse, null, 0);\n                } else {\n                    this.zoomOut(mouse, null, 0);\n                }\n            },\n            dblclick: function(event) {\n                event.preventDefault();\n\n                if (!this.options.zoom || !this.options.zoom.events.doubleClick) {\n                    return;\n                }\n\n                this.zoomIn(getViewBoxCoordinatesFromEvent(svg, event));\n            }\n        };\n\n        touchEvents: {\n            let dragStarted = false;\n            let scaleStarted = false;\n            let preventClick = false;\n            let pinchDistance = 0;\n\n            handlers.click = function(event) {\n                if (preventClick) {\n                    preventClick = false;\n                    return event.preventDefault();\n                }\n            };\n\n            handlers.pinchAndDrag = function(event) {\n                if (!this.options.pan.events.drag || (event.type === \"mousedown\" && event.which !== this.options.pan.events.dragMouseButton) || dragStarted || scaleStarted) {\n                    return;\n                }\n\n                event.preventDefault();\n                preventClick = false;\n\n                const domBody = window.document.body;\n                const initialViewBox = extend({}, this.getViewBox());\n\n                const oldCursor = this.options.eventMagnet.style.cursor;\n                if (this.options.pan.events.dragCursor !== null) {\n                    this.options.eventMagnet.style.cursor = this.options.pan.events.dragCursor;\n                }\n\n                if (event.type === \"touchstart\" && isDoubleTouch(event)) {\n                    scaleStarted = true;\n                    pinchDistance = touchDistance(event);\n                } else {\n                    dragStarted = true;\n                }\n\n                const mouseMoveCallback = event2 => {\n                    const isTouch = /touch/i.test(event.type);\n                    const checkDoubleTouch = isTouch && isDoubleTouch(event2);\n\n                    if (scaleStarted && !checkDoubleTouch) {\n                        return;\n                    }\n\n                    event2.preventDefault();\n\n                    if (!scaleStarted && checkDoubleTouch) {\n                        scaleStarted = true;\n                        dragStarted = false;\n                        pinchDistance = touchDistance(event2);\n                    }\n\n                    if (Math.sqrt(Math.pow(event.pageX - event2.pageX, 2) + Math.pow(event.pageY - event2.pageY, 2)) > 2) {\n                        preventClick = true;\n                    }\n\n                    if (dragStarted) {\n                        const initialMousePosition = getViewBoxCoordinatesFromEvent(svg, event);\n                        const currentMousePosition = getViewBoxCoordinatesFromEvent(svg, event2);\n                        this.pan(initialViewBox.x + (initialMousePosition.x - currentMousePosition.x), initialViewBox.y + (initialMousePosition.y - currentMousePosition.y), 0);\n                    } else if (scaleStarted) {\n                        const newPinchDistance = touchDistance(event2);\n                        if (newPinchDistance === pinchDistance) {\n                            return;\n                        }\n\n                        const mouse = touchCenter(svg, event2);\n                        this.zoomOut(mouse, (pinchDistance - newPinchDistance) / pinchDistance, 0);\n                        pinchDistance = newPinchDistance;\n                    }\n                };\n\n                const mouseUpCallback = event2 => {\n                    if (\n                        (event2.type === \"mouseout\" && event2.target !== event2.currentTarget) ||\n                        (event2.type === \"mouseup\" && event2.which !== this.options.pan.events.dragMouseButton)\n                    ) {\n                        return;\n                    }\n\n                    event2.preventDefault();\n                    domBody.removeEventListener(\"mousemove\", mouseMoveCallback, true);\n                    domBody.removeEventListener(\"touchmove\", mouseMoveCallback, true);\n                    domBody.removeEventListener(\"mouseup\", mouseUpCallback, true);\n                    domBody.removeEventListener(\"touchend\", mouseUpCallback, true);\n                    domBody.removeEventListener(\"touchcancel\", mouseUpCallback, true);\n                    domBody.removeEventListener(\"mouseout\", mouseUpCallback, true);\n\n                    if (this.options.pan.events.dragCursor !== null) {\n                        this.options.eventMagnet.style.cursor = oldCursor;\n                    }\n\n                    dragStarted = false;\n                    scaleStarted = false;\n                    pinchDistance = 0;\n                };\n\n                domBody.addEventListener(\"mousemove\", mouseMoveCallback, true);\n                domBody.addEventListener(\"touchmove\", mouseMoveCallback, true);\n                domBody.addEventListener(\"mouseup\", mouseUpCallback, true);\n                domBody.addEventListener(\"touchend\", mouseUpCallback, true);\n                domBody.addEventListener(\"touchcancel\", mouseUpCallback, true);\n                domBody.addEventListener(\"mouseout\", mouseUpCallback, true);\n            }\n        }\n\n        Object.keys(handlers).forEach(handler => {\n            handlers[handler] = handlers[handler].bind(this);\n        });\n\n        this.options.eventMagnet.addEventListener(\"click\", handlers.click, true);\n        this.options.eventMagnet.addEventListener(\"wheel\", handlers.mousewheel, true);\n        this.options.eventMagnet.addEventListener(\"dblclick\", handlers.dblclick, true);\n        this.options.eventMagnet.addEventListener(\"mousedown\", handlers.pinchAndDrag, true);\n        this.options.eventMagnet.addEventListener(\"touchstart\", handlers.pinchAndDrag, true);\n\n        this.destroy = function() {\n            this.options.eventMagnet.addEventListener(\"click\", handlers.click, true);\n            this.options.eventMagnet.addEventListener(\"wheel\", handlers.mousewheel, true);\n            this.options.eventMagnet.addEventListener(\"dblclick\", handlers.dblclick, true);\n            this.options.eventMagnet.addEventListener(\"mousedown\", handlers.pinchAndDrag, true);\n            this.options.eventMagnet.addEventListener(\"touchstart\", handlers.pinchAndDrag, true);\n        };\n    }\n}\n\nexport default SVGPanZoom;\n"],"names":["requestAnimationFrame","window","cancelAnimationFrame","callback","element","currTime","Date","getTime","timeToCall","Math","max","lastTime","id","setTimeout","Animation","initialState","finalState","time","onChange","onComplete","start","now","getCurrentState","currentState","keys","forEach","key","animate","timestamp","bind","currentAnimation","Function","prototype","args","apply","defaultOptions","multiplier","coordinates","defaultViewBox","parseViewBoxString","viewBox","string","replace","split","parseFloat","coordinateTransform","svgRoot","point","pos","createSVGPoint","x","parseInt","y","matrixTransform","getScreenCTM","inverse","getViewBoxCoordinatesFromEvent","e","originalEvent","test","type","touches","length","changedTouches","position","clientX","clientY","setViewBox","svg","setAttribute","width","height","join","touchDistance","event","sqrt","pow","isDoubleTouch","touchCenter","SVGPanZoom","options","SVGElement","Error","extend","baseVal","_options","defineProperty","self","_initialViewBox","_animationTime","_eventMagnet","_limits","initialViewBox","animationTime","eventMagnet","destroy","_setupEvents","limits","directionalLimits","trim","Number","horizontalSizeIncrement","minX","maxX","verticalSizeIncrement","minY","maxY","getAnimator","state","getViewBox","oldBox","validateLimits","panMethod","amount","pan","factor","panLeft","panRight","panUp","panDown","zoomMethod","focalPoint","zoom","zoomIn","zoomOut","newHeight","newWidth","minWidthAfterZoom","maxZoom","maxWidthAfterZoom","minZoom","minHeightAfterZoom","maxHeightAfterZoom","origin","reset","limitsWidth","abs","limitsHeight","clone","handlers","preventDefault","stopPropagation","delta","wheelDelta","events","mouseWheel","mouse","doubleClick","dragStarted","scaleStarted","preventClick","pinchDistance","click","pinchAndDrag","drag","which","dragMouseButton","domBody","document","body","oldCursor","style","cursor","dragCursor","mouseMoveCallback","isTouch","checkDoubleTouch","event2","pageX","pageY","initialMousePosition","currentMousePosition","newPinchDistance","mouseUpCallback","target","currentTarget","removeEventListener","addEventListener","handler","mousewheel","dblclick"],"mappings":"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"}